clear
figlet ALEKEY | sudo tee /etc/motd
clear
exit
clear
sudo su
clear
apt install nginx
sudo apt install nginx
clear
sudo su
curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc   | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null   && echo "deb https://ngrok-agent.s3.amazonaws.com buster main"   | sudo tee /etc/apt/sources.list.d/ngrok.list   && sudo apt update   && sudo apt install ngrok
sudo apt install ngrok
sudo apt update
clear
sudo apt install ca-certificates
sudo update-ca-certificates
sudo apt update
sudo nano /etc/apt/sources.list
cd /etc/apt/sources.list
cd /etc/apt/
rm sources.list
sudo rm sources.list
sudo nano sources.list
sudo apt update
curl -fsSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/ngrok.gpg
cd
curl -fsSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/ngrok.gpg
sudo apt install curl
curl -fsSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/ngrok.gpg
}curl -fsSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/ngrok.gpg
curl -fsSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/ngrok.gpg
sudo apt update
sudo rm /etc/apt/sources.list.d/ngrok.list
cd /etc/apt/sources.list.d/
ls
cd
curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc   | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null   && echo "deb https://ngrok-agent.s3.amazonaws.com buster main"   | sudo tee /etc/apt/sources.list.d/ngrok.list   && sudo apt update   && sudo apt install ngrok
clear
ngrok 80
ngrok http 80
ngrok config add-authtoken 2wpIIx0JfWdfizVLyDqWYzWShqr_4ePnHgkcVmd8qenThkYfL
ngrok http 80
ngrok http://localhost
clear
sudo /etc/init.d/nginx stop
ping 8.8.8.8
sudo /etc/init.d/nginx start
sudo cp /etc/nginx/sites-available/default /root/
sudo su
ngrok http 80
sudo cd /etc/nginx/sites-available/
cd /etc/nginx/sites-available/
cp default /var/www/alkey/
rm default 
sudo rm default 
sudo su
ngrok http 80
clear
sudo init 0
clear
cat /etc/nginx/sites-available/default 
ip add
clear
ls
cat /etc/nginx/sites-available/default 
clear
cat /etc/nginx/sites-available/default 
sudo init 0
clear
ip add
clear
ip add
}clear
sudo init 0
clear
ip add
clear
sudo nano /etc/hostname 
sudo nano /etc/hosts
sudo nano /etc/host.conf 
sudo nano /etc/hosts.allow 
sudo nano /etc/hosts.deny 
clear
reboot
sudo reboot
clear
sudo int 0
clear
kls
clear
ls
sudo su
sudo apt remove nginx nginx-common
sudo apt purge nginx nginx-common
sudo apt autoremove
clear
history 
clear
docker ps
sudo /etc/init.d/docker start
clear
sudo /etc/init.d/docker start
docker ps
sudo usermod -aG docker $USER
docker ps
sudo reboot
docker ps
clear
ls
rm default 
clea
clear
mkdir mi_bienvenida
cd mi_bienvenida/
clear
nano Dockerfile
mkdir html
cd html/
clear
nano index.html
nano style.ss
nano style.css
nano script.js
clear
cd ..
clear
docker-compose up --build -d
docker compose up --build -d
ls
docker compose up --build -d
clear
ls
cat Dockerfile 
ls html/
clear
nano docker-compose.yml
docker compose up --build -d
docker ps
history 
sudo su
clear
ls
cat /var/www/alkey/.bash_history 
clear
htop
sudo apt install dstat
dstat -cdnm --top-cpu
sudo apt install dstat
htop
CLEAR
clear
dstat -cdnm --top-cpu
clear
sudo init 0
ip add
clear
ip add
clear
sudo nano /etc/network/interfaces
clear
sudo reboot
clear
sudo init 0
clear
ls
mv mi_bienvenida/ mi_bienvenida_2
clear
lñs
clear
ls
git config --global credential.helper store
git clone https://github.com/A1exanderr/mi_bienvenida.git
clear
ls
cd mi_bienvenida
clear
lks
clear
ls
nano README.md 
git add .
git commit -m servidor_test1
git config --global user.email "looveyouuu10@gmail.com"
git config --global user.name "Alex"
git commit -m "servidor 1"
git push
clear
nano README.md 
git add .
git commit -m "servidor test 1"
git push
clear
ls
git pull
nano README.md 
CLEAR
clear
ls
clear
ls
nano README.md 
git checkout -b docker
git branch
git add .
git commit -m "informacion"
git push
git push --set-upstream origin docker
git reset --soft HEAD~1
git add .
git commit -m "informacion"
git push
git push --set-upstream origin docker
clear
ls
cd ..
clear
ls
cd mi_bienvenida
clear
cd ..
clear
ls
cd mi_bienvenida_2/
clear
lñs
clear
ls
ls -a
mv docker-compose.yml /var/www/alkey/mi_bienvenida
mv Dockerfile /var/www/alkey/mi_bienvenida
cp -r html/ /var/www/alkey/mi_bienvenida
ls
cd html/
ls -a
clear
ls
cd ..
clear
cd ..
clear
ls
sudo rm mi_bienvenida_2/
sudo rm -r mi_bienvenida_2/
clear
ls
cd cd mi_bienvenida/
cd mi_bienvenida/
clear
git add .
git commit -m "version estable"
git push
clear
sudo init 0
clear
sudo nano /etc/network/interfaces
sudo init 0
clear
sudo nano /etc/hosts
ping kuber1
ping kuber2
clear
cd mi_bienvenida/
git pull
clear
ls
./script_redpersistente.sh 
clear
sudo reboot
clear
sudo swapoff -a
sudo sed -i '/ swap / s/^/#/' /etc/fstab
sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /usr/share/keyrings/kubernetes-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt update
sudo apt install -y kubelet kubeadm kubectl
cat /etc/modules-load.d/containerd.conf
sudo apt upgrate
sudo apt-get upgrade
clear
cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf 
overlay 
br_netfilter
EOF

sudo modprobe overlay 
sudo modprobe br_netfilter
cat /etc/sysctl.d/99-kubernetes-k8s.conf
cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-k8s.conf
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1 
net.bridge.bridge-nf-call-ip6tables = 1 
EOF

sudo sysctl --system
sudo apt update
sudo apt-mark hold kubelet kubeadm kubectl
sudo apt install -y containerd
sudo mkdir -p /etc/containerd
containerd config default | sudo tee /etc/containerd/config.toml
sudo systemctl restart containerd
sudo systemctl enable containerd
sudo nano /etc/containerd/config.toml
sudo systemctl restart containerd
sudo init 0
clear
sudo nano /etc/hosts
clear
reboot
sudo reboot
ping kuber2
clear
sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint=kuber1
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubeadm token create --print-join-command
kubectl get nodes
kubectl get pods -n kube-system
kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
kubectl get pods -n kube-system -w
kubectl get pods -n kube-system
sudo init 0
clear
kubectl get pods -n kube-system
kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
kubectl get pods -n kube-flannel
clear
kubectl get pods -n kube-flannel
sudo init 0
