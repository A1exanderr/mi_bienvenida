clear
figlet ALEKEY | sudo tee /etc/motd
clear
exit
clear
sudo su
clear
apt install nginx
sudo apt install nginx
clear
sudo su
curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc   | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null   && echo "deb https://ngrok-agent.s3.amazonaws.com buster main"   | sudo tee /etc/apt/sources.list.d/ngrok.list   && sudo apt update   && sudo apt install ngrok
sudo apt install ngrok
sudo apt update
clear
sudo apt install ca-certificates
sudo update-ca-certificates
sudo apt update
sudo nano /etc/apt/sources.list
cd /etc/apt/sources.list
cd /etc/apt/
rm sources.list
sudo rm sources.list
sudo nano sources.list
sudo apt update
curl -fsSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/ngrok.gpg
cd
curl -fsSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/ngrok.gpg
sudo apt install curl
curl -fsSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/ngrok.gpg
}curl -fsSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/ngrok.gpg
curl -fsSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/ngrok.gpg
sudo apt update
sudo rm /etc/apt/sources.list.d/ngrok.list
cd /etc/apt/sources.list.d/
ls
cd
curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc   | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null   && echo "deb https://ngrok-agent.s3.amazonaws.com buster main"   | sudo tee /etc/apt/sources.list.d/ngrok.list   && sudo apt update   && sudo apt install ngrok
clear
ngrok 80
ngrok http 80
ngrok config add-authtoken 2wpIIx0JfWdfizVLyDqWYzWShqr_4ePnHgkcVmd8qenThkYfL
ngrok http 80
ngrok http://localhost
clear
sudo /etc/init.d/nginx stop
ping 8.8.8.8
sudo /etc/init.d/nginx start
sudo cp /etc/nginx/sites-available/default /root/
sudo su
ngrok http 80
sudo cd /etc/nginx/sites-available/
cd /etc/nginx/sites-available/
cp default /var/www/alkey/
rm default 
sudo rm default 
sudo su
ngrok http 80
clear
sudo init 0
clear
cat /etc/nginx/sites-available/default 
ip add
clear
ls
cat /etc/nginx/sites-available/default 
clear
cat /etc/nginx/sites-available/default 
sudo init 0
ip add
clear
sudo init 0
sudo nano /etc/hostname 
sudo nano /etc/hosts
sudo nano /etc/host.conf 
sudo reboot
clear
sudo apt remove nginx nginx-common
sudo apt purge nginx nginx-common
sudo apt autoremove{
sudo apt autoremove
clear
sudo apt update &&sudo apt upgrade
clear
sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
clear
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
sudo apt install docker-ce
sudo usermod -aG docker $USER
sudo reboot
clear
sudo init 0
clear
ip add
clear
sudo nano /etc/network/interfaces
sudo reboot
clear
cat /etc/network/interfaces
sudo init 0
clear
ls
git config --global credential.helper store
cleart
clear
ls
git clone https://github.com/A1exanderr/mi_bienvenida.git
cd mi_bienvenida/
clear
nano README.md 
git add .
git commit -m "servidor test 2"
git config --global user.email "looveyouuu10@gmail.com"
git config --global user.name "Alex

git config --global user.name "Alex"
clear
git add .
git commit -m "server 2"
git push
clear
ls
nano README.md 
git add .
git commit -m "server test 2"
git push
clear
ls
nano README.md 
git add .
git commit -m "server test 2"
git push
CLEAR
clear
ls
cd ..
clear
ls
rm -r mi_bienvenida/
sudo rm -r mi_bienvenida/
clear
sudo init 0
clear
ip add
clear
sudo init 0
clear
clear
ls
rm default 
clear
ip add .
ip add
sudo init 0
clear
sudo nano /etc/hosts
ping kuber1
sudo nano /etc/hosts
ping kuber1
ping kuber2
sudo reboot
clear
nano ss.sh
chmod +x ss.sh 
./ss.sh 
reboot
sudo reboot
clear
sudo swapoff -a
sudo sed -i '/ swap / s/^/#/' /etc/fstab
sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /usr/share/keyrings/kubernetes-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt update
sudo apt install -y kubelet kubeadm kubectl
sudo apt update
sudo apt upgrade
sudo apt install -y kubelet kubeadm kubectl
clear
cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
cat /etc/modules-load.d/containerd.conf
clear
$ cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf 
overlay 
br_netfilter
EOF

cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf 
overlay 
br_netfilter
EOF

sudo modprobe overlay 
sudo modprobe br_netfilter
cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-k8s.conf
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1 
net.bridge.bridge-nf-call-ip6tables = 1 
EOF

clear
sudo sysctl --system
sudo apt update
sudo apt-mark hold kubelet kubeadm kubectl
sudo apt install -y containerd
sudo mkdir -p /etc/containerd
containerd config default | sudo tee /etc/containerd/config.toml
sudo systemctl restart containerd
sudo systemctl enable containerd
sudo nano /etc/containerd/config.toml
sudo systemctl restart containerd
clear
sudo init 0
sudo /etc/network/interfaces
clear
sudo nano /etc/network/interfaces
sudo init 0
clear
sudo nano /etc/network/interfaces
sudo nano /etc/hosts
reboot
sudo reboot
clea
clear
ping kuber1
ping kuber2
clear
sysctl net.bridge.bridge-nf-call-iptables
sysctl net.bridge.bridge-nf-call-ip6tables
sysctl net.ipv4.ip_forward
clear
sudo kubeadm join kuber1:6443 --token 35enyf.eqgxxisbgy9uh2st --discovery-token-ca-cert-hash sha256:d416521c77aba82d641e0461ff7d461222fe8b21bc7a1d49d77e7162244e53ee
kubectl get nodes
sudo init 0
clear
sudo init 0
